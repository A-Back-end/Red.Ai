version: '3.8'

services:
  # Frontend Next.js App
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: redai_frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL:-http://localhost:8000}
      - NEXT_PUBLIC_FIREBASE_API_KEY=${NEXT_PUBLIC_FIREBASE_API_KEY}
      - NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=${NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN}
      - NEXT_PUBLIC_FIREBASE_PROJECT_ID=${NEXT_PUBLIC_FIREBASE_PROJECT_ID}
      - NEXT_PUBLIC_APP_URL=${NEXT_PUBLIC_APP_URL:-http://localhost:3000}
      - NODE_ENV=${NODE_ENV:-production}
    depends_on:
      - backend
    volumes:
      - ./app:/app/app
      - ./components:/app/components
      - ./lib:/app/lib
      - ./public:/app/public
      - ./utils:/app/utils
    restart: unless-stopped
    networks:
      - red-ai

  # Backend FastAPI
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: redai_backend
    ports:
      - "8000:8000"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - AZURE_OPENAI_API_KEY=${AZURE_OPENAI_API_KEY}
      - AZURE_OPENAI_ENDPOINT=${AZURE_OPENAI_ENDPOINT}
      - AZURE_DALLE_DEPLOYMENT_NAME=${AZURE_DALLE_DEPLOYMENT_NAME}
      - AZURE_OPENAI_API_VERSION=${AZURE_OPENAI_API_VERSION:-2024-04-01-preview}
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=${DEBUG:-false}
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./backend:/app
      - ./uploads:/app/uploads
      - ./logs:/app/logs
      - ./public/generated-images:/app/generated-images
    restart: unless-stopped
    networks:
      - red-ai
    depends_on:
      - redis

  # Redis (for caching and session storage)
  redis:
    image: redis:7-alpine
    container_name: redai_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    restart: unless-stopped
    networks:
      - red-ai

  # Nginx reverse proxy
  nginx:
    image: nginx:stable-alpine
    container_name: redai_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - './nginx.conf:/etc/nginx/nginx.conf:ro'
      - '/etc/letsencrypt:/etc/letsencrypt:ro'
    depends_on:
      - backend
      - frontend
    networks:
      - red-ai
    restart: unless-stopped
    environment:
      - NGINX_HOST=${DOMAIN:-localhost}

volumes:
  redis_data:
    driver: local

networks:
  red-ai:
    name: redai_network
    driver: bridge 