version: '3.8'

networks:
  redai-network:
    driver: bridge

services:
  nginx:
    image: nginx:alpine
    container_name: redai_nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx-redai-no-ssl.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - backend
    networks:
      - redai-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 5s
      retries: 3



  frontend:
    build:
      context: .
      dockerfile: docker/Dockerfile.frontend.production
      args:
        - NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=pk_live_Y2xlcmsucmVkYWkuc2l0ZSQ
        - OPENAI_API_KEY=${OPENAI_API_KEY:-placeholder_for_build}
    container_name: redai_frontend
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_APP_URL=https://redai.site
      - NEXT_PUBLIC_API_URL=https://redai.site/api
      - NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=pk_live_Y2xlcmsucmVkYWkuc2l0ZSQ
      - CLERK_SECRET_KEY=sk_live_XOBM4dWdsiCF86b4SxGiGMLajYcA2omHPe4Xcn6i9w
      - BFL_API_KEY=${BFL_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    depends_on:
      - backend
    networks:
      - redai-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: redai_backend
    environment:
      - NODE_ENV=production
      - DEBUG=false
      - AZURE_OPENAI_API_KEY=${AZURE_OPENAI_API_KEY}
      - AZURE_OPENAI_ENDPOINT=${AZURE_OPENAI_ENDPOINT}
      - AZURE_OPENAI_API_VERSION=2024-05-01-preview
      - AZURE_OPENAI_DEPLOYMENT_NAME=gpt-4
      - BFL_API_KEY=${BFL_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    volumes:
      - ./uploads:/app/uploads
      - ./public/generated-images:/app/generated-images
      - ./database:/app/database
    networks:
      - redai-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3 