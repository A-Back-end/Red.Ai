#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –æ—á–∏—Å—Ç–∫–∏ –∫—ç—à–∞ –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è Clerk –Ω–∞ production mode

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo_step() {
    echo -e "${BLUE}üîß $1${NC}"
}

echo_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

echo_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

echo_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

echo_step "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Clerk production mode..."

# 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ .env —Ñ–∞–π–ª—ã
echo_step "–ü—Ä–æ–≤–µ—Ä–∫–∞ .env —Ñ–∞–π–ª–æ–≤..."

echo ""
echo "üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ Clerk –∫–ª—é—á–µ–π –≤ .env —Ñ–∞–π–ª–∞—Ö:"
echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º .env
if [ -f ".env" ]; then
    echo "üîß .env —Ñ–∞–π–ª:"
    if grep -q "pk_live_" .env; then
        echo_success "  ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è production –∫–ª—é—á"
        grep "NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY" .env
    else
        echo_error "  ‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω production –∫–ª—é—á"
    fi
    
    if grep -q "CLERK_TELEMETRY_DISABLED=true" .env; then
        echo_success "  ‚úÖ Telemetry –æ—Ç–∫–ª—é—á–µ–Ω"
    else
        echo_warning "  ‚ö†Ô∏è Telemetry –Ω–µ –æ—Ç–∫–ª—é—á–µ–Ω"
    fi
    echo ""
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º .env.local
if [ -f ".env.local" ]; then
    echo "üîß .env.local —Ñ–∞–π–ª:"
    if grep -q "pk_live_" .env.local; then
        echo_success "  ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è production –∫–ª—é—á"
        grep "NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY" .env.local
    else
        echo_error "  ‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω production –∫–ª—é—á"
    fi
    
    if grep -q "CLERK_TELEMETRY_DISABLED=true" .env.local; then
        echo_success "  ‚úÖ Telemetry –æ—Ç–∫–ª—é—á–µ–Ω"
    else
        echo_warning "  ‚ö†Ô∏è Telemetry –Ω–µ –æ—Ç–∫–ª—é—á–µ–Ω"
    fi
    echo ""
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º .env.production
if [ -f ".env.production" ]; then
    echo "üîß .env.production —Ñ–∞–π–ª:"
    if grep -q "pk_live_" .env.production; then
        echo_success "  ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è production –∫–ª—é—á"
        grep "NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY" .env.production
    else
        echo_error "  ‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω production –∫–ª—é—á"
    fi
    
    if grep -q "CLERK_TELEMETRY_DISABLED=true" .env.production; then
        echo_success "  ‚úÖ Telemetry –æ—Ç–∫–ª—é—á–µ–Ω"
    else
        echo_warning "  ‚ö†Ô∏è Telemetry –Ω–µ –æ—Ç–∫–ª—é—á–µ–Ω"
    fi
    echo ""
fi

# 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º layout.tsx
echo_step "–ü—Ä–æ–≤–µ—Ä–∫–∞ layout.tsx..."
if grep -q "telemetry={false}" app/layout.tsx; then
    echo_success "‚úÖ Telemetry –æ—Ç–∫–ª—é—á–µ–Ω –≤ ClerkProvider"
else
    echo_error "‚ùå Telemetry –Ω–µ –æ—Ç–∫–ª—é—á–µ–Ω –≤ ClerkProvider"
fi

# 3. –û—á–∏—â–∞–µ–º –∫—ç—à
echo_step "–û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞..."
echo "üßπ –û—á–∏—Å—Ç–∫–∞ Next.js –∫—ç—à–∞..."

# –£–¥–∞–ª—è–µ–º .next –ø–∞–ø–∫—É
if [ -d ".next" ]; then
    rm -rf .next
    echo_success "‚úÖ .next –ø–∞–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∞"
else
    echo_warning "‚ö†Ô∏è .next –ø–∞–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
fi

# –û—á–∏—â–∞–µ–º node_modules/.cache –µ—Å–ª–∏ –µ—Å—Ç—å
if [ -d "node_modules/.cache" ]; then
    rm -rf node_modules/.cache
    echo_success "‚úÖ node_modules/.cache –æ—á–∏—â–µ–Ω"
fi

# 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–µ—Ç development –∫–ª—é—á–µ–π
echo_step "–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ development –∫–ª—é—á–µ–π..."
if grep -r "pk_test_" .env* 2>/dev/null; then
    echo_warning "‚ö†Ô∏è –ù–∞–π–¥–µ–Ω—ã test –∫–ª—é—á–∏ –≤ .env —Ñ–∞–π–ª–∞—Ö"
else
    echo_success "‚úÖ Test –∫–ª—é—á–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
fi

# 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º Docker –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
echo_step "–ü—Ä–æ–≤–µ—Ä–∫–∞ Docker –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π..."
echo "üê≥ –ü—Ä–æ–≤–µ—Ä–∫–∞ docker-compose —Ñ–∞–π–ª–æ–≤:"

if grep -q "pk_live_" docker-compose.production.yml; then
    echo_success "  ‚úÖ docker-compose.production.yml –∏—Å–ø–æ–ª—å–∑—É–µ—Ç production –∫–ª—é—á–∏"
else
    echo_warning "  ‚ö†Ô∏è docker-compose.production.yml –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç production –∫–ª—é—á–∏"
fi

# 6. –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
echo_step "–§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞..."
echo ""
echo "üéØ –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏:"
echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –∫–ª—é—á–∏
TOTAL_FILES=0
PRODUCTION_FILES=0
TELEMETRY_DISABLED_FILES=0

for env_file in .env .env.local .env.production; do
    if [ -f "$env_file" ]; then
        TOTAL_FILES=$((TOTAL_FILES + 1))
        
        if grep -q "pk_live_" "$env_file"; then
            PRODUCTION_FILES=$((PRODUCTION_FILES + 1))
        fi
        
        if grep -q "CLERK_TELEMETRY_DISABLED=true" "$env_file"; then
            TELEMETRY_DISABLED_FILES=$((TELEMETRY_DISABLED_FILES + 1))
        fi
    fi
done

echo "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:"
echo "  ‚Ä¢ –í—Å–µ–≥–æ .env —Ñ–∞–π–ª–æ–≤: $TOTAL_FILES"
echo "  ‚Ä¢ –° production –∫–ª—é—á–∞–º–∏: $PRODUCTION_FILES"
echo "  ‚Ä¢ –° –æ—Ç–∫–ª—é—á–µ–Ω–Ω—ã–º telemetry: $TELEMETRY_DISABLED_FILES"

if [ $PRODUCTION_FILES -eq $TOTAL_FILES ] && [ $TELEMETRY_DISABLED_FILES -eq $TOTAL_FILES ]; then
    echo_success "üéâ –í—Å–µ —Ñ–∞–π–ª—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ!"
else
    echo_warning "‚ö†Ô∏è –ù–µ –≤—Å–µ —Ñ–∞–π–ª—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ"
fi

echo ""
echo_success "‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo ""
echo "üöÄ –î–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π:"
echo "   1. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: npm run dev"
echo "   2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ, —á—Ç–æ –Ω–µ—Ç –æ—à–∏–±–æ–∫ telemetry"
echo "   3. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç" 