#!/bin/bash

# ========================================
# RED.AI PRODUCTION SETUP SCRIPT
# ========================================
# –°–∫—Ä–∏–ø—Ç –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ production –æ–∫—Ä—É–∂–µ–Ω–∏—è

set -e

echo "üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ RED.AI –¥–ª—è production..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ .env.production
if [ ! -f .env.production ]; then
    echo "‚ùå –§–∞–π–ª .env.production –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    echo "–°–æ–∑–¥–∞–π—Ç–µ –µ–≥–æ –Ω–∞ –æ—Å–Ω–æ–≤–µ .env.production.example"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Clerk –∫–ª—é—á–µ–π
if grep -q "pk_live_your_publishable_key_here" .env.production; then
    echo "‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: Clerk –∫–ª—é—á–∏ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã!"
    echo "–û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ .env.production –∏ –¥–æ–±–∞–≤—å—Ç–µ –≤–∞—à–∏ –±–æ–µ–≤—ã–µ –∫–ª—é—á–∏:"
    echo "  - NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=pk_live_..."
    echo "  - CLERK_SECRET_KEY=sk_live_..."
    echo ""
    read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –±–µ–∑ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–ª—é—á–µ–π? (y/N): " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        exit 1
    fi
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º Docker
if ! command -v docker &> /dev/null; then
    echo "‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
    exit 1
fi

if ! command -v docker-compose &> /dev/null; then
    echo "‚ùå Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
    exit 1
fi

echo "‚úÖ Docker –∏ Docker Compose –Ω–∞–π–¥–µ–Ω—ã"

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
echo "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
docker-compose down --volumes --remove-orphans

# –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–∑—ã
echo "üßπ –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–∑—ã..."
docker system prune -f

# –°–æ–±–∏—Ä–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º
echo "üî® –°–æ–±–∏—Ä–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º production –æ–∫—Ä—É–∂–µ–Ω–∏–µ..."
docker-compose up --build -d

# –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
echo "‚è≥ –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
sleep 30

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤..."
docker-compose ps

echo ""
echo "üéâ Production –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ!"
echo ""
echo "üì± Frontend: http://localhost:3000"
echo "üîß Backend API: http://localhost:8000"
echo "üóÑÔ∏è  Database: localhost:5432"
echo "üìä Monitoring: http://localhost:9090"
echo ""
echo "üìã –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "  - –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤: docker-compose logs -f"
echo "  - –û—Å—Ç–∞–Ω–æ–≤–∫–∞: docker-compose down"
echo "  - –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫: docker-compose restart"
echo "  - –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ: docker-compose pull && docker-compose up -d"
