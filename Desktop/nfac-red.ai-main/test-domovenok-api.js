#!/usr/bin/env node

// –¢–µ—Å—Ç API –¥–æ–º–æ–≤–µ–Ω–∫–∞
const API_URL = 'http://localhost:3000/api/azure-ai-chat'

const testRequests = [
  {
    name: '–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç',
    payload: {
      message: '–ü—Ä–∏–≤–µ—Ç! –†–∞—Å—Å–∫–∞–∂–∏ –æ —Å–≤–æ–∏—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö',
      specialization: 'universal',
      personality: 'friendly',
      assistantName: '–î–æ–º–æ–≤—ë–Ω–æ–∫'
    }
  },
  {
    name: '–†–∏–µ–ª—Ç–æ—Ä',
    payload: {
      message: '–ö–∞–∫ –≤—ã–±—Ä–∞—Ç—å –∫–≤–∞—Ä—Ç–∏—Ä—É –¥–ª—è –ø–æ–∫—É–ø–∫–∏?',
      specialization: 'realtor',
      personality: 'professional',
      assistantName: '–î–æ–º–æ–≤—ë–Ω–æ–∫'
    }
  },
  {
    name: '–î–∏–∑–∞–π–Ω–µ—Ä –∏–Ω—Ç–µ—Ä—å–µ—Ä–∞',
    payload: {
      message: '–ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å —É—é—Ç–Ω—ã–π –∏–Ω—Ç–µ—Ä—å–µ—Ä –≤ –º–∞–ª–µ–Ω—å–∫–æ–π –∫–≤–∞—Ä—Ç–∏—Ä–µ?',
      specialization: 'interior_designer',
      personality: 'friendly',
      assistantName: '–î–æ–º–æ–≤—ë–Ω–æ–∫'
    }
  }
]

async function testDomovenokAPI() {
  console.log('üè† –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –î–æ–º–æ–≤—ë–Ω–∫–∞...\n')

  for (const test of testRequests) {
    console.log(`üìã –¢–µ—Å—Ç: ${test.name}`)
    console.log(`‚ùì –í–æ–ø—Ä–æ—Å: ${test.payload.message}`)
    
    try {
      const response = await fetch(API_URL, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(test.payload)
      })

      const data = await response.json()

      if (response.ok) {
        console.log(`‚úÖ –°—Ç–∞—Ç—É—Å: ${response.status}`)
        console.log(`ü§ñ –ü—Ä–æ–≤–∞–π–¥–µ—Ä: ${data.provider || 'Unknown'}`)
        console.log(`üí¨ –û—Ç–≤–µ—Ç: ${data.message?.substring(0, 200)}${data.message?.length > 200 ? '...' : ''}`)
        
        if (data.status === 'api_not_configured') {
          console.log(`‚ö†Ô∏è  –†–µ–∂–∏–º: –î–µ–º–æ (API –∫–ª—é—á–∏ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã)`)
        }
      } else {
        console.log(`‚ùå –û—à–∏–±–∫–∞: ${response.status}`)
        console.log(`üìù –î–µ—Ç–∞–ª–∏: ${data.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`)
      }
    } catch (error) {
      console.log(`üí• –û—à–∏–±–∫–∞ —Å–µ—Ç–∏: ${error.message}`)
    }
    
    console.log('‚îÄ'.repeat(80))
    console.log('')
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
testDomovenokAPI().catch(console.error) 