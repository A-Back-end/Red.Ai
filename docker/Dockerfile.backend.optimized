# Red.AI Backend Dockerfile - Optimized for Production
FROM python:3.11-slim as builder

# Install build dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Create virtual environment
RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Upgrade pip and install wheel
RUN pip install --no-cache-dir --upgrade pip setuptools wheel

# Copy requirements
COPY requirements/base.txt ./requirements.txt
COPY backend/requirements.txt ./backend-requirements.txt

# Install dependencies in virtual environment
RUN pip install --no-cache-dir \
    --timeout=300 \
    --retries=5 \
    -r requirements.txt

RUN pip install --no-cache-dir \
    --timeout=300 \
    --retries=5 \
    -r backend-requirements.txt

# Production stage
FROM python:3.11-slim as production

# Create user for security
RUN groupadd -r redai && useradd -r -g redai redai

# Install runtime dependencies only
RUN apt-get update && apt-get install -y \
    curl \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Copy virtual environment from builder
COPY --from=builder /opt/venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Set work directory
WORKDIR /app

# Copy application code
COPY backend/ ./backend/
COPY src/ ./src/

# Create necessary directories
RUN mkdir -p uploads logs static generated-images && \
    chown -R redai:redai /app

# Switch to redai user
USER redai

# Set environment variables
ENV PYTHONPATH=/app
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1

# Expose port
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=5 \
    CMD curl -f http://localhost:8000/health || exit 1

# Start command
CMD ["python", "backend/main.py"] 