version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: docker/Dockerfile.backend.optimized
      args:
        - BUILDKIT_INLINE_CACHE=1
    container_name: redai_backend_server
    ports:
      - "8000:8000"
    environment:
      - NODE_ENV=production
      - DEBUG=false
      - AZURE_OPENAI_API_KEY=${AZURE_OPENAI_API_KEY:-your_azure_key_here}
      - AZURE_OPENAI_ENDPOINT=${AZURE_OPENAI_ENDPOINT:-https://neuroflow-hub.openai.azure.com}
      - AZURE_OPENAI_API_VERSION=${AZURE_OPENAI_API_VERSION:-2024-05-01-preview}
      - AZURE_OPENAI_DEPLOYMENT_NAME=${AZURE_OPENAI_DEPLOYMENT_NAME:-gpt-4.1}
    restart: unless-stopped
    networks:
      - redai-network
    volumes:
      - uploads_data:/app/uploads
      - logs_data:/app/logs
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.25'
        reservations:
          memory: 256M
          cpus: '0.1'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  ai-processor:
    build:
      context: .
      dockerfile: docker/Dockerfile.ai-processor.optimized
      args:
        - BUILDKIT_INLINE_CACHE=1
    container_name: redai_ai_processor_server
    ports:
      - "8001:8001"
    environment:
      - NODE_ENV=production
      - AZURE_OPENAI_API_KEY=${AZURE_OPENAI_API_KEY:-your_azure_key_here}
      - AZURE_OPENAI_ENDPOINT=${AZURE_OPENAI_ENDPOINT:-https://neuroflow-hub.openai.azure.com}
      - AZURE_OPENAI_API_VERSION=${AZURE_OPENAI_API_VERSION:-2024-05-01-preview}
      - AZURE_OPENAI_DEPLOYMENT_NAME=${AZURE_OPENAI_DEPLOYMENT_NAME:-gpt-4.1}
    restart: unless-stopped
    networks:
      - redai-network
    volumes:
      - uploads_data:/app/uploads
    depends_on:
      - backend
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  postgres:
    image: postgres:15-alpine
    container_name: redai_postgres_server
    environment:
      - POSTGRES_DB=redai
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - redai-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.1'
        reservations:
          memory: 128M
          cpus: '0.05'

  redis:
    image: redis:7-alpine
    container_name: redai_redis_server
    ports:
      - "6379:6379"
    restart: unless-stopped
    networks:
      - redai-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.05'
        reservations:
          memory: 64M
          cpus: '0.02'

networks:
  redai-network:
    driver: bridge

volumes:
  uploads_data:
    driver: local
  logs_data:
    driver: local
  postgres_data:
    driver: local 