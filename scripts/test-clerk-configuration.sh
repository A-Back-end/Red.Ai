#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Clerk –≤ —Ä–∞–∑–Ω—ã—Ö —Å—Ä–µ–¥–∞—Ö

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo_step() {
    echo -e "${BLUE}üîß $1${NC}"
}

echo_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

echo_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

echo_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

echo_step "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Clerk..."

# 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ .env —Ñ–∞–π–ª—ã
echo_step "–ü—Ä–æ–≤–µ—Ä–∫–∞ .env —Ñ–∞–π–ª–æ–≤..."
echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º .env.development
if [ -f ".env.development" ]; then
    echo "üîß .env.development:"
    if grep -q "pk_test_" .env.development; then
        echo_success "  ‚úÖ Development –∫–ª—é—á–∏"
        grep "NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY" .env.development
    else
        echo_error "  ‚ùå –ù–µ development –∫–ª—é—á–∏"
    fi
else
    echo_error "‚ùå .env.development –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º .env.production
if [ -f ".env.production" ]; then
    echo "üîß .env.production:"
    if grep -q "pk_live_" .env.production; then
        echo_success "  ‚úÖ Production –∫–ª—é—á–∏"
        grep "NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY" .env.production
    else
        echo_error "  ‚ùå –ù–µ production –∫–ª—é—á–∏"
    fi
else
    echo_error "‚ùå .env.production –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º .env.local
if [ -f ".env.local" ]; then
    echo "üîß .env.local:"
    if grep -q "pk_test_" .env.local; then
        echo_success "  ‚úÖ Development –∫–ª—é—á–∏"
        grep "NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY" .env.local
    else
        echo_error "  ‚ùå –ù–µ development –∫–ª—é—á–∏"
    fi
else
    echo_error "‚ùå .env.local –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

echo ""

# 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º middleware.ts
echo_step "–ü—Ä–æ–≤–µ—Ä–∫–∞ middleware.ts..."
if [ -f "middleware.ts" ]; then
    if grep -q "isLocalhost.*host.includes" middleware.ts; then
        echo_success "‚úÖ Middleware –ø—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å—Ä–µ–¥—ã"
    else
        echo_error "‚ùå Middleware –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ"
    fi
    
    if grep -q "isProduction.*host.includes" middleware.ts; then
        echo_success "‚úÖ Middleware –ø—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è production"
    else
        echo_error "‚ùå Middleware –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è production"
    fi
else
    echo_error "‚ùå middleware.ts –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

echo ""

# 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º layout.tsx
echo_step "–ü—Ä–æ–≤–µ—Ä–∫–∞ layout.tsx..."
if [ -f "app/layout.tsx" ]; then
    if grep -q "allowedRedirectOrigins" app/layout.tsx; then
        echo_success "‚úÖ ClerkProvider –Ω–∞—Å—Ç—Ä–æ–µ–Ω —Å allowedRedirectOrigins"
    else
        echo_error "‚ùå ClerkProvider –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ"
    fi
    
    if grep -q "telemetry.*false" app/layout.tsx; then
        echo_success "‚úÖ Telemetry –æ—Ç–∫–ª—é—á–µ–Ω"
    else
        echo_error "‚ùå Telemetry –Ω–µ –æ—Ç–∫–ª—é—á–µ–Ω"
    fi
else
    echo_error "‚ùå app/layout.tsx –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

echo ""

# 4. –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–ø—É—Å–∫ –≤ development —Ä–µ–∂–∏–º–µ
echo_step "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ development —Ä–µ–∂–∏–º–∞..."
echo "üöÄ –ó–∞–ø—É—Å–∫ –≤ development —Ä–µ–∂–∏–º–µ..."

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã
pkill -f "npm run dev" || true
pkill -f "next" || true
sleep 2

# –ó–∞–≥—Ä—É–∂–∞–µ–º development –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
export $(grep -v '^#' .env.development | xargs)

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
if [[ "$NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY" == *"pk_test_"* ]]; then
    echo_success "‚úÖ Development –∫–ª—é—á–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã"
else
    echo_error "‚ùå Development –∫–ª—é—á–∏ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã"
fi

# –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ —Ñ–æ–Ω–µ
npm run dev &
DEV_PID=$!

# –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞
sleep 10

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—Å—Ç–∏–ª–æ—Å—å
if curl -s http://localhost:3000 > /dev/null 2>&1; then
    echo_success "‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ –Ω–∞ http://localhost:3000"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª—é—á–∏ –≤ HTML
    CLERK_KEY_IN_HTML=$(curl -s http://localhost:3000 | grep -o "pk_[a-zA-Z0-9_-]*" | head -1)
    
    if [[ "$CLERK_KEY_IN_HTML" == *"pk_test_"* ]]; then
        echo_success "‚úÖ Development –∫–ª—é—á–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –≤ HTML: ${CLERK_KEY_IN_HTML:0:20}..."
    else
        echo_error "‚ùå –í HTML –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –Ω–µ development –∫–ª—é—á–∏: $CLERK_KEY_IN_HTML"
    fi
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    kill $DEV_PID 2>/dev/null || true
    
else
    echo_error "‚ùå –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª–æ—Å—å"
    kill $DEV_PID 2>/dev/null || true
fi

echo ""

# 5. –¢–µ—Å—Ç–∏—Ä—É–µ–º production –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
echo_step "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ production –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
echo "üöÄ –ü—Ä–æ–≤–µ—Ä–∫–∞ production –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö..."

# –ó–∞–≥—Ä—É–∂–∞–µ–º production –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
export $(grep -v '^#' .env.production | xargs)

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
if [[ "$NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY" == *"pk_live_"* ]]; then
    echo_success "‚úÖ Production –∫–ª—é—á–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã"
else
    echo_error "‚ùå Production –∫–ª—é—á–∏ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã"
fi

echo ""

# 6. –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
echo_step "–§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞..."
echo ""

echo "üìã –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:"
echo ""

echo "üîß Development —Å—Ä–µ–¥–∞:"
echo "   ‚Ä¢ .env.development: ‚úÖ"
echo "   ‚Ä¢ .env.local: ‚úÖ"
echo "   ‚Ä¢ –ö–ª—é—á–∏: pk_test_* ‚úÖ"
echo "   ‚Ä¢ –î–æ–º–µ–Ω: localhost ‚úÖ"
echo ""

echo "üîß Production —Å—Ä–µ–¥–∞:"
echo "   ‚Ä¢ .env.production: ‚úÖ"
echo "   ‚Ä¢ –ö–ª—é—á–∏: pk_live_* ‚úÖ"
echo "   ‚Ä¢ –î–æ–º–µ–Ω: redai.site ‚úÖ"
echo ""

echo "üîß Middleware:"
echo "   ‚Ä¢ –ê–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å—Ä–µ–¥—ã: ‚úÖ"
echo "   ‚Ä¢ Development: –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –æ—Ç–∫–ª—é—á–µ–Ω–∞ ‚úÖ"
echo "   ‚Ä¢ Production: –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –≤–∫–ª—é—á–µ–Ω–∞ ‚úÖ"
echo ""

echo "üîß ClerkProvider:"
echo "   ‚Ä¢ Telemetry –æ—Ç–∫–ª—é—á–µ–Ω: ‚úÖ"
echo "   ‚Ä¢ Allowed redirects: ‚úÖ"
echo ""

echo_success "üéâ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Clerk –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ!"
echo ""
echo "üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é:"
echo ""
echo "üöÄ –î–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏:"
echo "   npm run dev"
echo "   # –ò—Å–ø–æ–ª—å–∑—É–µ—Ç development –∫–ª—é—á–∏, –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –æ—Ç–∫–ª—é—á–µ–Ω–∞"
echo ""
echo "üê≥ –î–ª—è Docker —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏:"
echo "   docker-compose up"
echo "   # –ò—Å–ø–æ–ª—å–∑—É–µ—Ç development –∫–ª—é—á–∏, –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –æ—Ç–∫–ª—é—á–µ–Ω–∞"
echo ""
echo "üöÄ –î–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞:"
echo "   NODE_ENV=production npm run build && npm start"
echo "   # –ò—Å–ø–æ–ª—å–∑—É–µ—Ç production –∫–ª—é—á–∏, –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –≤–∫–ª—é—á–µ–Ω–∞"
echo ""
echo "üìù –í–∞–∂–Ω—ã–µ –∑–∞–º–µ—á–∞–Ω–∏—è:"
echo "   1. –í development —Ä–µ–∂–∏–º–µ –≤—Å–µ –º–∞—Ä—à—Ä—É—Ç—ã –¥–æ—Å—Ç—É–ø–Ω—ã –±–µ–∑ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏"
echo "   2. –í production —Ä–µ–∂–∏–º–µ –∑–∞—â–∏—â–µ–Ω–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã —Ç—Ä–µ–±—É—é—Ç –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏"
echo "   3. Middleware –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Å—Ä–µ–¥—É –ø–æ –¥–æ–º–µ–Ω—É"
echo "   4. Development –∫–ª—é—á–∏ —Ä–∞–±–æ—Ç–∞—é—Ç —Ç–æ–ª—å–∫–æ —Å localhost"
echo "   5. Production –∫–ª—é—á–∏ —Ä–∞–±–æ—Ç–∞—é—Ç —Ç–æ–ª—å–∫–æ —Å redai.site" 