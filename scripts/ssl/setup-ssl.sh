#!/bin/bash

# Setup SSL Certificate for redai.site
# –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø–æ–º–æ–∂–µ—Ç –ø–æ–ª—É—á–∏—Ç—å SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –¥–ª—è –¥–æ–º–µ–Ω–∞ redai.site

echo "üîê Setting up SSL certificate for redai.site..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–æ–º–µ–Ω —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ —ç—Ç–æ—Ç —Å–µ—Ä–≤–µ—Ä
echo "üìã Checking DNS configuration..."
DOMAIN_IP=$(dig +short redai.site)
SERVER_IP=$(curl -s ifconfig.me)

echo "Domain redai.site points to: $DOMAIN_IP"
echo "This server IP: $SERVER_IP"

if [ "$DOMAIN_IP" != "$SERVER_IP" ]; then
    echo "‚ö†Ô∏è  WARNING: Domain redai.site does not point to this server!"
    echo "Please update your DNS A record to point redai.site to $SERVER_IP"
    echo "Continuing anyway for testing purposes..."
fi

# –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Nginx –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞
echo "üìù Creating temporary Nginx configuration..."
cat > nginx-temp.conf << 'EOF'
events {
    worker_connections 1024;
}

http {
    server {
        listen 80;
        server_name redai.site www.redai.site;

        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        location / {
            return 200 "Server is ready for SSL setup";
            add_header Content-Type text/plain;
        }
    }
}
EOF

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –Ω–∞ –ø–æ—Ä—Ç–∞—Ö 80 –∏ 443
echo "üõë Stopping existing services..."
sudo lsof -ti:80 | xargs sudo kill -9 2>/dev/null || true
sudo lsof -ti:443 | xargs sudo kill -9 2>/dev/null || true

# –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞
echo "üöÄ Starting temporary Nginx for certificate generation..."
docker run -d --name nginx-temp \
    -p 80:80 \
    -v $(pwd)/nginx-temp.conf:/etc/nginx/nginx.conf:ro \
    -v certbot-www:/var/www/certbot \
    nginx:alpine

# –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ Nginx
sleep 5

# –ü–æ–ª—É—á–∞–µ–º SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç
echo "üîë Requesting SSL certificate from Let's Encrypt..."
docker run --rm \
    -v letsencrypt:/etc/letsencrypt \
    -v certbot-www:/var/www/certbot \
    certbot/certbot certonly \
    --webroot \
    --webroot-path=/var/www/certbot \
    --email admin@redai.site \
    --agree-tos \
    --no-eff-email \
    -d redai.site \
    -d www.redai.site

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –ø–æ–ª—É—á–µ–Ω–∏—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞
if docker run --rm -v letsencrypt:/etc/letsencrypt certbot/certbot certificates | grep -q "redai.site"; then
    echo "‚úÖ SSL certificate successfully obtained!"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞
    echo "üìÖ Certificate information:"
    docker run --rm -v letsencrypt:/etc/letsencrypt certbot/certbot certificates
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    docker stop nginx-temp
    docker rm nginx-temp
    
    # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    rm nginx-temp.conf
    
    echo "üéâ SSL setup completed! You can now start the production environment:"
    echo "   ./start-production.sh"
    
else
    echo "‚ùå Failed to obtain SSL certificate!"
    echo "Please check:"
    echo "1. Domain redai.site points to this server IP: $SERVER_IP"
    echo "2. Ports 80 and 443 are accessible from the internet"
    echo "3. Firewall allows HTTP/HTTPS traffic"
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    docker stop nginx-temp
    docker rm nginx-temp
    rm nginx-temp.conf
    
    exit 1
fi 