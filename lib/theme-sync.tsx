'use client'

import { Language } from './translations'

export type Theme = 'light' | 'dark'

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≥–ª–æ–±–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Ç–µ–º
 */
export function initThemeSync(): void {
  if (typeof window === 'undefined') return

  // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
  const savedTheme = getSavedTheme()
  const savedLanguage = getSavedLanguage()

  // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ç–µ–º—É –∫ DOM
  applyThemeToDOM(savedTheme)
  
  // –ü—Ä–∏–º–µ–Ω—è–µ–º —è–∑—ã–∫ –∫ DOM
  applyLanguageToDOM(savedLanguage)

  console.log('üé® Theme sync system initialized', { 
    theme: savedTheme, 
    language: savedLanguage 
  })
}

/**
 * –ü–æ–ª—É—á–∏—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—É—é —Ç–µ–º—É –∏–∑ localStorage
 */
export function getSavedTheme(): Theme {
  if (typeof window === 'undefined') return 'dark'
  
  const saved = localStorage.getItem('theme') as Theme | null
  if (saved && (saved === 'light' || saved === 'dark')) {
    return saved
  }

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–∏—Å—Ç–µ–º–Ω—É—é —Ç–µ–º—É
  const systemTheme = window.matchMedia('(prefers-color-scheme: dark)').matches 
    ? 'dark' 
    : 'light'
  
  return systemTheme
}

/**
 * –ü–æ–ª—É—á–∏—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π —è–∑—ã–∫ –∏–∑ localStorage
 */
export function getSavedLanguage(): Language {
  if (typeof window === 'undefined') return 'en'
  
  const saved = localStorage.getItem('language') as Language | null
  if (saved && (saved === 'en' || saved === 'ru')) {
    return saved
  }

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —è–∑—ã–∫ –±—Ä–∞—É–∑–µ—Ä–∞
  const browserLanguage = navigator.language.toLowerCase()
  return browserLanguage.includes('ru') ? 'ru' : 'en'
}

/**
 * –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≥–ª–æ–±–∞–ª—å–Ω—É—é —Ç–µ–º—É
 */
export function setGlobalTheme(theme: Theme): void {
  if (typeof window === 'undefined') return

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage
  localStorage.setItem('theme', theme)
  
  // –ü—Ä–∏–º–µ–Ω—è–µ–º –∫ DOM
  applyThemeToDOM(theme)
  
  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
  emitThemeChangeEvent(theme)
}

/**
 * –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≥–ª–æ–±–∞–ª—å–Ω—ã–π —è–∑—ã–∫
 */
export function setGlobalLanguage(language: Language): void {
  if (typeof window === 'undefined') return

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage
  localStorage.setItem('language', language)
  
  // –ü—Ä–∏–º–µ–Ω—è–µ–º –∫ DOM
  applyLanguageToDOM(language)
  
  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
  emitLanguageChangeEvent(language)
}

/**
 * –ü—Ä–∏–º–µ–Ω–∏—Ç—å —Ç–µ–º—É –∫ DOM —ç–ª–µ–º–µ–Ω—Ç–∞–º
 */
function applyThemeToDOM(theme: Theme): void {
  if (typeof window === 'undefined') return

  const root = document.documentElement
  const body = document.body

  // –û–±–Ω–æ–≤–ª—è–µ–º –∫–ª–∞—Å—Å—ã –Ω–∞ root —ç–ª–µ–º–µ–Ω—Ç–µ
  root.classList.remove('light', 'dark')
  root.classList.add(theme)

  // –û–±–Ω–æ–≤–ª—è–µ–º data-theme –∞—Ç—Ä–∏–±—É—Ç –Ω–∞ body
  body.setAttribute('data-theme', theme)
}

/**
 * –ü—Ä–∏–º–µ–Ω–∏—Ç—å —è–∑—ã–∫ –∫ DOM —ç–ª–µ–º–µ–Ω—Ç–∞–º
 */
function applyLanguageToDOM(language: Language): void {
  if (typeof window === 'undefined') return

  // –û–±–Ω–æ–≤–ª—è–µ–º lang –∞—Ç—Ä–∏–±—É—Ç –¥–æ–∫—É–º–µ–Ω—Ç–∞
  document.documentElement.lang = language
}

/**
 * –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–±—ã—Ç–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–µ–º—ã
 */
function emitThemeChangeEvent(theme: Theme): void {
  if (typeof window === 'undefined') return

  const event = new CustomEvent('redai-theme-change', {
    detail: { theme }
  })
  
  window.dispatchEvent(event)
}

/**
 * –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–±—ã—Ç–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —è–∑—ã–∫–∞
 */
function emitLanguageChangeEvent(language: Language): void {
  if (typeof window === 'undefined') return

  const event = new CustomEvent('redai-language-change', {
    detail: { language }
  })
  
  window.dispatchEvent(event)
}

/**
 * –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–µ–º—ã
 */
export function subscribeToThemeChanges(callback: (theme: Theme) => void): () => void {
  if (typeof window === 'undefined') return () => {}

  const handler = (event: CustomEvent) => {
    callback(event.detail.theme)
  }

  window.addEventListener('redai-theme-change', handler as EventListener)
  
  return () => {
    window.removeEventListener('redai-theme-change', handler as EventListener)
  }
}

/**
 * –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —è–∑—ã–∫–∞
 */
export function subscribeToLanguageChanges(callback: (language: Language) => void): () => void {
  if (typeof window === 'undefined') return () => {}

  const handler = (event: CustomEvent) => {
    callback(event.detail.language)
  }

  window.addEventListener('redai-language-change', handler as EventListener)
  
  return () => {
    window.removeEventListener('redai-language-change', handler as EventListener)
  }
}

/**
 * –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Ç–µ–º—É
 */
export function toggleGlobalTheme(): void {
  const currentTheme = getSavedTheme()
  const newTheme: Theme = currentTheme === 'dark' ? 'light' : 'dark'
  setGlobalTheme(newTheme)
}

/**
 * –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —è–∑—ã–∫
 */
export function toggleGlobalLanguage(): void {
  const currentLanguage = getSavedLanguage()
  const newLanguage: Language = currentLanguage === 'en' ? 'ru' : 'en'
  setGlobalLanguage(newLanguage)
} 